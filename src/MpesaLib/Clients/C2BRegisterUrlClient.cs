using MpesaLib.Interfaces;
using MpesaLib.Models;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;

namespace MpesaLib.Clients
{
    /// <summary>
    /// Instantiate this class to register your app callback Urls.
    /// </summary>
    public class C2BRegisterUrlClient : IC2BRegisterUrlClient
    {
        private readonly HttpClient _httpclient;
        public C2BRegisterUrlClient(HttpClient httpClient)
        {
            _httpclient = httpClient;
        }

        /// <summary>
        /// Defaults to sandbox URL. Override with Mpesa production url when deploying to a production environment.
        /// </summary>
        public string BaseUri { get; set; } = "https://sandbox.safaricom.co.ke/mpesa/c2b/v1/registerurl";

        /// <summary>
        /// Register your app callback url
        /// </summary>
        /// <param name="c2bregisterItem">Register Url request object</param>
        /// <param name="accesstoken">Access token generated by AuthClient</param>
        /// <returns>Returns a JSON string that you should deserialize</returns>
        public async Task<string> RegisterUrl(CustomerToBusinessRegister c2bregisterItem, string accesstoken)
        {
            Uri BaseAddress = new Uri(BaseUri);
            _httpclient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
            _httpclient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", accesstoken);            

            var values = new Dictionary<string, string>
            {
                {"ShortCode", c2bregisterItem.ShortCode },
                {"ResponseType", c2bregisterItem.ResponseType },
                {"ConfirmationURL", c2bregisterItem.ConfirmationURL },
                { "ValidationURL", c2bregisterItem.ValidationURL }

            };


            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, BaseAddress)
            {
                Content = new StringContent(JsonConvert.SerializeObject(values).ToString(), Encoding.UTF8, "application/json")
            };          

            HttpResponseMessage response = await _httpclient.SendAsync(request);

            return response.Content.ReadAsStringAsync().Result;
        }
    }
}
